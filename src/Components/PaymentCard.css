/* PaymentCard.css */

@keyframes scroll{
  
  0% {
    transform: perspective(1700px) rotateX(0) translateY(0);
  }
  5% {
    transform: perspective(700px) rotateX(3deg) translateY(10%);
  }
  10% {
    transform: perspective(1300px) rotateX(6deg) translateY(20%);
  }
  15% {
    transform: perspective(500px) rotateX(9deg) translateY(30%);
  }
  20% {
    transform: perspective(400px) rotateX(12deg) translateY(40%);
  }
  25% {
    transform: perspective(200px) rotateX(100deg) translateY(50%);
  }
 


 

}


/* @keyframes scroll-delayed {
  5% {
    transform: perspective(2000px) rotateX(0) translateY(0);
  }
  10% {
    transform: perspective(1500px) rotateX(5deg) translateY(00%);
  }
  15% {
    transform: perspective(1000px) rotateX(5deg) translateY(00%);
  }
  20% {
    transform: perspective(500px) rotateX(5deg) translateY(00%);
  }
  25% {
    transform: perspective(250px) rotateX(5deg) translateY(00%);
  }
  30% {
    transform: perspective(200px) rotateX(5deg) translateY(00%);
  }
  35% {
    transform: perspective(150px) rotateX(5deg) translateY(00%);
  }
  40% {
    transform: perspective(100px) rotateX(5deg) translateY(00%);
  }
  45% {
    transform: perspective(80px) rotateX(5deg) translateY(00%);
  }
  50% {
    transform: perspective(70px) rotateX(5deg) translateY(00%);
  }
  60% {
    transform: perspective(3000px) rotateX(5deg) translateY(00%);
  }
  70% {
    transform: perspective(3000px) rotateX(5deg) translateY(00%);
  }

  
  

} */



/* ... Your existing keyframes and styles ... */



/* ... Rest of your existing CSS ... */








.App {
  text-align: center;
  margin-top: 1cm; /* Adjust the margin as needed */
}

.card-container {
  height: 30px; /* Set the desired height for the card container */
  overflow-x: hidden; /* Hide horizontal overflow */
  overflow-y: hidden; /* Hide vertical overflow */
  perspective: 200px; /* Adjust the perspective value for 3D effect */
}

.card-list {
  position: relative;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center; 
  gap: -20cm; /* Negative gap for card overlapping */
  margin-top: -30px;
  /* perspective: 1000px; Adjust the perspective value for 3D effect */
  /* animation: scroll_ 10s ease-in infinite; Inherit animation delay */
  transform: perspective(300px) rotateX(6deg) translateY(20%);


}

.card-item {
  position: relative;
  margin-bottom: -20px;
  /* animation: scroll_ 1s infinite   ; */
  padding: 70px;
  margin-top: -10px;
  transition: transform 0.3s ease, opacity 0.3s ease; /* Apply transition to transform and opacity */
  will-change: transform; /* Optimize for smoother animations */
 }

.card-item {
  position: relative;
  margin-left: -1cm; /* Adjust the negative margin to control overlap */
  transition: 1s ease-out;
  margin-bottom: -270px;
  margin-top: 10px;
  transform-style: preserve-3d; /* Enable 3D transforms for card stacking */
  /* animation: scroll-delayed scrol_ 5s ease-in infinite; Inherit animation delay */
}
.card-item:hover {
  transform: scale(0.1) translateY(-10px); /* Add translateY to lift the hovered card */
  position: relative;
  z-index: 100;
  block-size: 1%;
  padding: 1px;
  transform-style: preserve-3d;
  position: inherit;
  box-shadow :25px;
  margin-top:0px; 
  margin-bottom: -20px;
  transform: perspective(200px) rotateX(3deg) translateY(30%);
  /* animation: scroll-delayed scroll_ 1s ease-out  ; */
}



.card-number-mask {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
 
}

/* PaymentCard.css */
.popup-overlay {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: flex-end;
  z-index: 100;
}

.popup-container {
  width: 100%;
  background-color: white;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
  padding: 20px;
  box-shadow: 0px px 10px rgba(0, 0, 0, 0.1);
  animation: slideUp 0.3s ease-in-out; /* Added animation */
}

/* New animation keyframes */
@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}








.card-item {
  /* margin: 10px; */
  cursor: pointer;
}



.custom-modal {
  position: relative;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 80%; /* Adjust the height of the modal */
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: flex-end; /* Push the content to the bottom */
  justify-content: center;
  z-index: 100; /* Ensure the modal is above other content */

  transition: opacity 0.3s, visibility 0.3s;

}

.modal-content {
  margin-top:-10px;
  background-color: white;
  opacity: 90%;
  padding: 10px;
  width: 80vw; /* Set the width to cover 80% of the viewport width */
position: relative;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
  /* box-shadow: 0px -5px 10px rgba(0, 0, 0, 0.2); Add shadow to top */
 
  max-height: 90vh; /* Set maximum height for the modal */
  overflow-y: auto; /* Add scroll when content overflows */

  transition: opacity 0.3s, visibility 0.3s;

}

.close-button {
  background-color: #ff0000;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
}

.close-button:hover {
  background-color: #cc0000;
}


.modal-open {
  opacity: 1;
  visibility: visible;
}

/* Add a class to control the modal content's position for opening */
.modal-content-open {
  transform: translate(-50%, -50%) scale(1);
}

.modal-content-close {
  transform: translate(-50%, -50%) scale(0.8);
  opacity: 0;
}


